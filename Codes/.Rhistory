setwd("C:/Users/johnn/Dropbox/Employment/UNSW/Airtasker")
library(tidyverse)
library(tm) # Text Mining
library(e1071) # Naive Bayes
library(SnowballC) # Stemming
library(caret) # confusion matrix
data_raw <- read.csv("Label task_v1.csv")
data_raw <- data_raw %>%
select(Tasks.Name, Label_Tasks.Name)
str(data_raw)
table(data_raw$Label_Tasks.Name)
data_clean <- data_raw %>%
mutate(TASK = toupper(Label_Tasks.Name)) %>%
select(-Label_Tasks.Name)
table(data_clean$TASK)
class_count <- data_clean %>%
group_by(TASK) %>%
summarise(count = n())
main_classes <- class_count %>%
filter(count >=9)
rare_classes <- class_count %>%
filter(count < 9)
rare_task_class <- merge(data_clean, rare_classes, by = "TASK",
all.y = TRUE) %>%
arrange(desc(count))
rare_task_class
data_clean$TASK <- gsub("\\<CLEAN\\>", "CLEANING", data_clean$TASK)
data_clean$TASK <- gsub("\\<ASSEMBLY & HANDYMAN\\>", "ASSEMBLY", data_clean$TASK)
data_clean$TASK <- gsub("\\<DELIVER\\>", "DELIVERY", data_clean$TASK)
data_clean$TASK <- gsub("\\<GARDENING & CLEANING\\>", "GARDENING", data_clean$TASK)
data_clean$TASK <- gsub("\\<GARDENING&CLEANING\\>", "GARDENING", data_clean$TASK)
data_clean$TASK <- gsub("\\<HANDYMAN & REMOVALISTS\\>", "REMOVALIST", data_clean$TASK)
data_clean$TASK <- gsub("\\<REMOVALISTS\\>", "REMOVALIST", data_clean$TASK)
data_clean$TASK <- gsub("\\<OR REMOVALIST\\>", "REMOVALIST", data_clean$TASK)
data_clean$TASK <- gsub("\\<REMOVAL\\>", "REMOVALIST", data_clean$TASK)
data_clean$TASK <- gsub("\\<REMOVALIST & ASSEMBLY\\>", "REMOVALIST", data_clean$TASK)
data_clean <- data_clean %>% filter(TASK !="")
table(data_clean$TASK)
class_count <- data_clean %>%
group_by(TASK) %>%
summarise(count = n())
class_count$TASK <- reorder(class_count$TASK,
class_count$count)
ggplot(class_count, aes(x = TASK, y = count)) +
geom_bar(stat = "identity") +
coord_flip()
taskCorpus <- Corpus(VectorSource(data_clean$Tasks.Name))
taskCorpusClean <- taskCorpus %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(stripWhitespace)
DTM <- DocumentTermMatrix(taskCorpusClean)
DTM
taskCorpusCleanStemmed <- taskCorpusClean %>%
tm_map(stemDocument)
DTM <- DocumentTermMatrix((taskCorpusCleanStemmed))
DTM
findFreqTerms(DTM, 20)
findAssocs(DTM, "install", 0.2)
findAssocs(DTM, "clean", 0.2)
findAssocs(DTM, "build", 0.2)
count2bool <- function(x){
y <- ifelse(x>0, 1, 0)
y <- factor(y, levels=c(0,1), labels=c("No", "Yes"))
return(y)
}
DTM <- apply(DTM, 2, count2bool)
trainSize <- 1200
testSize <- dim(DTM)[1] - trainSize
data_df <- as.data.frame(DTM)
data_df$LABEL <- as.factor(data_clean$TASK)
df_train <- data_df[1:trainSize, ]
df_test <- data_df[-(1:trainSize),]
stopifnot(dim(df_train)[1] + dim(df_test)[1] == dim(DTM)[1])
system.time(classifier <- naiveBayes(LABEL ~ ., df_train, laplace = 0.001))
system.time( pred <- predict(classifier, df_test[, -dim(df_test)[2]]) )
confMat <- confusionMatrix(pred, df_test$LABEL)
confMat
compare_classes <- data.frame(TASK = rownames(confMat$byClass),
balancedAccuracy = confMat$byClass[, "Balanced Accuracy"])
compare_classes$TASK <- substring(compare_classes$TASK, nchar("CLASS: _"))
rownames(compare_classes) <- c()
compare_classes <- merge(compare_classes, class_count)
ggplot(compare_classes, aes(x = count, y = balancedAccuracy, label = TASK)) +
geom_point() +
geom_text(nudge_y = 0.013) +
labs(x = "Number of observations in dataset",
y = "Balanced accuracy")
View(DTM)
classifier
str(classifier)
str(classifier)
classifier$tables
sum(DTM)
.53
str(DTM)
DTM
data_clean %>% filter(TASK = "CLEANING")
data_clean %>% filter(TASK == "CLEANING")
help(melt)
setwd("C:/Users/johnn/Dropbox/Employment/UNSW/Airtasker")
library(tidyverse)
library(tm) # Text Mining
library(e1071) # Naive Bayes
library(SnowballC) # Stemming
library(caret) # confusion matrix
library(reshape2) #melt
source('C:/Users/johnn/Dropbox/Uni/2017 S2/ACTL3162/Assignment/Codes/Task1.R', echo=TRUE)
View(fitted_pdf)
View(fitted_pdf_melted)
DTM["TASK"]
setwd("C:/Users/johnn/Dropbox/Employment/UNSW/Airtasker")
library(tidyverse)
library(tm) # Text Mining
library(e1071) # Naive Bayes
library(SnowballC) # Stemming
library(caret) # confusion matrix
library(reshape2) #melt
data_raw <- read.csv("Label task_v1.csv")
data_raw <- data_raw %>%
select(Tasks.Name, Label_Tasks.Name)
str(data_raw)
table(data_raw$Label_Tasks.Name)
data_clean <- data_raw %>%
mutate(TASK = toupper(Label_Tasks.Name)) %>%
select(-Label_Tasks.Name)
table(data_clean$TASK)
class_count <- data_clean %>%
group_by(TASK) %>%
summarise(count = n())
main_classes <- class_count %>%
filter(count >=9)
rare_classes <- class_count %>%
filter(count < 9)
rare_task_class <- merge(data_clean, rare_classes, by = "TASK",
all.y = TRUE) %>%
arrange(desc(count))
rare_task_class
data_clean$TASK <- gsub("\\<CLEAN\\>", "CLEANING", data_clean$TASK)
data_clean$TASK <- gsub("\\<ASSEMBLY & HANDYMAN\\>", "ASSEMBLY", data_clean$TASK)
data_clean$TASK <- gsub("\\<DELIVER\\>", "DELIVERY", data_clean$TASK)
data_clean$TASK <- gsub("\\<GARDENING & CLEANING\\>", "GARDENING", data_clean$TASK)
data_clean$TASK <- gsub("\\<GARDENING&CLEANING\\>", "GARDENING", data_clean$TASK)
data_clean$TASK <- gsub("\\<HANDYMAN & REMOVALISTS\\>", "REMOVALIST", data_clean$TASK)
data_clean$TASK <- gsub("\\<REMOVALISTS\\>", "REMOVALIST", data_clean$TASK)
data_clean$TASK <- gsub("\\<OR REMOVALIST\\>", "REMOVALIST", data_clean$TASK)
data_clean$TASK <- gsub("\\<REMOVAL\\>", "REMOVALIST", data_clean$TASK)
data_clean$TASK <- gsub("\\<REMOVALIST & ASSEMBLY\\>", "REMOVALIST", data_clean$TASK)
data_clean <- data_clean %>% filter(TASK !="")
table(data_clean$TASK)
class_count <- data_clean %>%
group_by(TASK) %>%
summarise(count = n())
class_count$TASK <- reorder(class_count$TASK,
class_count$count)
ggplot(class_count, aes(x = TASK, y = count)) +
geom_bar(stat = "identity") +
coord_flip()
taskCorpus <- Corpus(VectorSource(data_clean$Tasks.Name))
taskCorpusClean <- taskCorpus %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removePunctuation) %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(stripWhitespace)
DTM <- DocumentTermMatrix(taskCorpusClean)
DTM
taskCorpusCleanStemmed <- taskCorpusClean %>%
tm_map(stemDocument)
DTM <- DocumentTermMatrix((taskCorpusCleanStemmed))
DTM
findFreqTerms(DTM, 20)
count2bool <- function(x){
y <- ifelse(x>0, 1, 0)
y <- factor(y, levels=c(0,1), labels=c("No", "Yes"))
return(y)
}
DTM <- apply(DTM, 2, count2bool)
trainSize <- 1200
testSize <- dim(DTM)[1] - trainSize
data_df <- as.data.frame(DTM)
data_df$LABEL <- as.factor(data_clean$TASK)
df_train <- data_df[1:trainSize, ]
df_test <- data_df[-(1:trainSize),]
stopifnot(dim(df_train)[1] + dim(df_test)[1] == dim(DTM)[1])
system.time(classifier <- naiveBayes(LABEL ~ ., df_train, laplace = 0.001))
system.time( pred <- predict(classifier, df_test[, -dim(df_test)[2]]) )
confMat <- confusionMatrix(pred, df_test$LABEL)
confMat
compare_classes <- data.frame(TASK = rownames(confMat$byClass),
balancedAccuracy = confMat$byClass[, "Balanced Accuracy"])
compare_classes$TASK <- substring(compare_classes$TASK, nchar("CLASS: _"))
rownames(compare_classes) <- c()
compare_classes <- merge(compare_classes, class_count)
ggplot(compare_classes, aes(x = count, y = balancedAccuracy, label = TASK)) +
geom_point() +
geom_text(nudge_y = 0.013) +
labs(x = "Number of observations in dataset",
y = "Balanced accuracy")
# change DTM from wide to long
DTM_long <- melt(DTM, id = c("TASK"), variable.name = "word")
View(DTM_long)
View(DTM_long)
DTM$TASK
DTM["TASK"]
View(DTM)
colnames(DTM)[dim(DTM)[2]]
report_path <-
"C:/Users/johnn/Dropbox/Uni/2017 S2/ACTL3162/Assignment/Report/images/"
source('C:/Users/johnn/Dropbox/Uni/2017 S2/ACTL3162/Assignment/Codes/Task1.R', echo=TRUE)
install.packages(actuar)
install.packages("actuar")
source('C:/Users/johnn/Dropbox/Uni/2017 S2/ACTL3162/Assignment/Codes/Task1.R', echo=TRUE)
install.packages("profvis")
source('C:/Users/johnn/Dropbox/Uni/2017 S2/ACTL3162/Assignment/Codes/Task1.R', echo=TRUE)
install.packages("microbenchmark")
source('C:/Users/johnn/Dropbox/Uni/2017 S2/ACTL3162/Assignment/Codes/Task1.R', echo=TRUE)
